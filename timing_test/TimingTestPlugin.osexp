---
API: 2.1
OpenSesame: 3.3.14
Platform: nt
---
set width 1024
set uniform_coordinates yes
set title "New experiment"
set subject_parity even
set subject_nr 0
set start experiment
set sound_sample_size -16
set sound_freq 48000
set sound_channels 2
set sound_buf_size 1024
set round_decimals 2
set height 768
set fullscreen no
set form_clicks no
set foreground white
set font_underline no
set font_size 18
set font_italic no
set font_family mono
set font_bold no
set experiment_path None
set disable_garbage_collection yes
set description "The main experiment item"
set coordinates uniform
set compensation 0
set canvas_backend psycho
set background black

define sequence experiment
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run getting_started always
	run welcome always
	run init_lpt always
	run markers_init always
	run new_loop always

define notepad getting_started
	__note__
	Welcome to OpenSesame 3.3 "Lentiform Loewenfeld"!
	If you are new to OpenSesame, it is a good idea to follow one of the tutorials,
	which can be found on the documentation site:
	- <http://osdoc.cogsci.nl/>
	You can also check out the examples. These can be opened via:
	- Menu -> Tools -> Example experiments.
	And feel free to ask for help on the forum:
	- <http://forum.cogsci.nl/>
	Have fun with OpenSesame!
	__end__
	set description "A simple notepad to document your experiment. This plug-in does nothing."

define inline_script init_lpt
	set description "Executes Python code"
	___run__
	"""
	This inline shows how to use the inpoutx64.dll to send markers/triggers.
	
	Before this can be run the inpoutx64.dll must be installed. This requires
	admin privileges.
	"""
	
	# Import windll, then load the inpout library and set it as a global dll_obj.
	from ctypes import windll
	global dll_obj
	dll_obj = windll.LoadLibrary("inpoutx64.dll")
	
	# Set the LPT address (this may differ per PC!):
	lpt_addr = '0x4FF8'
	
	# Define a global helper function that sends the marker.
	# This uses the DlPortWritePortUchar method, where the first
	# argument is the lpt address as an integer, and the second 
	# the marker value.
	global send_marker
	send_marker = lambda val: dll_obj.DlPortWritePortUchar(int(lpt_addr,0), val)
	
	# The send_marker(value) function can now be called anywhere
	# within this experiment. It will automatically call the DlPortWritePortUchar
	# function using the address defined in lpt_addr and the passed value.
	
	# Reset the markers by sending a value zero:
	send_marker(0)
	__end__
	set _prepare ""

define markers_init markers_init
	set marker_gen_mark_file yes
	set marker_flash_255 no
	set marker_dummy_mode no
	set marker_device_tag marker_device_1
	set marker_device_serial ANY
	set marker_device_addr ANY
	set marker_device UsbParMarker
	set marker_crash_on_mark_errors yes
	set description "Handles communication with Leiden Univ marker devices"

define loop new_loop
	set source table
	set repeat 20
	set order random
	set description "Repeatedly runs another item"
	set cycles 1
	set continuous no
	set break_if_on_first yes
	set break_if never
	setcycle 0 empty_column ""
	run new_sequence

define sequence new_sequence
	set flush_keyboard yes
	set description "Runs a number of items in sequence"
	run send_marker_display always
	run send_marker_ubsparmar always
	run send_marker_lpt always
	run wait_100ms always
	run reset_marker_usbparmar always
	run reset_marker_lpt always
	run wait_10ms always

define inline_script reset_marker_lpt
	set description "Executes Python code"
	set _run "send_marker(0)"
	set _prepare ""

define markers_send reset_marker_usbparmar
	set marker_value 0
	set marker_reset_to_zero no
	set marker_object_duration 0
	set marker_device_tag marker_device_1
	set description "Handles communication with Leiden Univ marker devices"

define sketchpad send_marker_display
	set duration 0
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=mono font_italic=no font_size=18 html=yes show_if=always text="sending markers" x=0 y=0 z_index=0

define inline_script send_marker_lpt
	set description "Executes Python code"
	set _run "send_marker(1)"
	set _prepare ""

define markers_send send_marker_ubsparmar
	set marker_value 1
	set marker_reset_to_zero no
	set marker_object_duration 0
	set marker_device_tag marker_device_1
	set description "Handles communication with Leiden Univ marker devices"

define advanced_delay wait_100ms
	set jitter_mode Uniform
	set jitter 0
	set duration 100
	set description "Waits for a specified duration"

define advanced_delay wait_10ms
	set jitter_mode Uniform
	set jitter 0
	set duration 10
	set description "Waits for a specified duration"

define sketchpad welcome
	set start_response_interval no
	set reset_variables no
	set duration keypress
	set description "Displays stimuli"
	draw textline center=1 color=white font_bold=no font_family=serif font_italic=no font_size=32 html=yes show_if=always text="OpenSesame 3.3 <i>Lentiform Loewenfeld</i>" x=0 y=0 z_index=0

